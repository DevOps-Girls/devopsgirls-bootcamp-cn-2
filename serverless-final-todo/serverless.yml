service: serverless-final-todo

custom:
  tableName: ${self:service}-${self:provider.stage}

provider:
  name: aws
  region: ${opt:region, 'ap-southeast-2'}
  runtime: nodejs8.10
  stackName: ${self:service}-${self:provider.stage}
  stage: ${opt:stage, 'dev'}
  usagePlan:
    throttle:
      burstLimit: 100
      rateLimit: 10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DeleteItem
        - dynamodb:PutItem
        - dynamodb:Scan
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:dynamodb:'
            - Ref: AWS::Region
            - ':'
            - Ref: AWS::AccountId
            - :table/
            - Ref: DatabaseTable

functions:
  TodoApi:
    name: ${self:service}-api-${self:provider.stage}
    handler: index.handler
    environment:
      TABLE_NAME:
        Ref: DatabaseTable
    events:
      - http:
          cors: true
          method: any
          path: /{proxy+}

resources:
  Resources:
    DatabaseTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    WebsiteBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Retain
      Properties:
        Tags:
          - Key: Public # this is a SEEK thing
            Value: Static assets for DevOps-Girls/DevOps-Girls-Bootcamp-4
        WebsiteConfiguration:
          IndexDocument: index.html
    WebsiteBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Action: s3:GetObject
              Effect: Allow
              Principal: '*'
              Resource:
                Fn::Join:
                  - ''
                  - - 'arn:aws:s3:::'
                    - Ref: WebsiteBucket
                    - /*
        Bucket:
          Ref: WebsiteBucket

  Outputs:
    WebsiteBucketName:
      Value:
        Ref: WebsiteBucket
    WebsiteURL:
      Value:
        Fn::GetAtt:
          - WebsiteBucket
          - WebsiteURL
